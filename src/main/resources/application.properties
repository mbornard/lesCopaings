# Le port sur lequel est lancee l'application web (8080 par defaut)
server.port=8989
# L'API REST est exposee a l'url http://localhost:8989/api
spring.data.rest.base-path=api
# L'URL de la source de donnees : Serveur PostgreSQL, nom de la base de donnees, utilisateur et mot de passe
#spring.datasource.url=jdbc:postgresql://localhost:5432/BD_pTut
spring.datasource.username=postgres
spring.datasource.password=postgres
# Configuration de la generation de JSON
spring.data.rest.defaultMediaType=application/json
# Encodage des scripts sql d'initialisation de la BD : data.sql, schema.sql
# cf. https://code.chamo.de/2017/04/21/spring-boot-jpa-encoding-data-sql/

spring.sql.init.encoding=UTF-8

# L'URL de la source de donnees : SGBD H2 en memoire vive
spring.datasource.url=jdbc:h2:mem:testdb

# Comment hibernate doit recreer le schema de la BD
# Hibernate ddl auto (create, create-drop, update, none): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# On recree automatiquement le schema relationnel a partir des annotations JPA
spring.jpa.hibernate.ddl-auto=create-drop

# Pour afficher les statistiques d'executon SQL dans les logs
#spring.jpa.properties.hibernate.generate_statistics=true
# Log slow queries
#spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=1

# On initialise la BD (data.sql) APRES la creation du schema relationnel
spring.jpa.defer-datasource-initialization=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# La console H2 est activee automatiquement si on utilise Spring Boot Dev Tools
spring.h2.console.enabled=true
# L'URL par defaut de la console H2, customisable
#spring.h2.console.path=/h2-console
# Acces a la console depuis l'exterieur
spring.h2.console.settings.web-allow-others=true
